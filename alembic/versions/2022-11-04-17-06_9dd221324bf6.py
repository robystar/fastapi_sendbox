"""tabelle

Revision ID: 9dd221324bf6
Revises: 1a28f36f4959
Create Date: 2022-11-04 17:06:31.746339

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added


# revision identifiers, used by Alembic.
revision = '9dd221324bf6'
down_revision = '1a28f36f4959'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tecnico',
    sa.Column('cf', sa.String(length=16), nullable=True),
    sa.Column('piva', sa.String(length=11), nullable=True),
    sa.Column('codcat_nato', sa.String(length=4), nullable=True),
    sa.Column('sesso', sa.String(length=1), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pec', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cellulare', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fax', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('comune', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('prov', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('loc', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cap', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('indirizzo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('civico', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('app', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nome', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cognome', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('data_nato', sa.Date(), nullable=True),
    sa.Column('comune_nato', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('prov_nato', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('loc_nato', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cittadinanza', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('search', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('denominazione', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('data_incarico', sa.Date(), nullable=True),
    sa.Column('qualita', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('qualita_altro', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ruolo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ruolo_altro', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('albo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('albo_numero', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('albo_prov', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cciaa', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cciaa_numero', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cciaa_prov', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('edile_numero', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('edile_prov', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('inail', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('inps', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('indirizzo_residenza', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('civico_residenza', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('comune_residenza', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('prov_residenza', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cap_residenza', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('principale', sa.Boolean(), nullable=True),
    sa.Column('sostituito', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('istanza_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['istanza_id'], ['edilizia.istanza.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='edilizia'
    )
    op.drop_column('delegato', 'qualita', schema='edilizia')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('delegato', sa.Column('qualita', sa.VARCHAR(), autoincrement=False, nullable=True), schema='edilizia')
    op.drop_table('tecnico', schema='edilizia')
    # ### end Alembic commands ###
